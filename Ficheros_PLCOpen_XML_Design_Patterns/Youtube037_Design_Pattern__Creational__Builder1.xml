<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://www.plcopen.org/xml/tc6_0200">
  <fileHeader companyName="Beckhoff Automation GmbH" productName="TwinCAT PLC Control" productVersion="3.5.13.21" creationDateTime="2023-12-04T13:03:45.3100449" />
  <contentHeader name="Builder1" modificationDateTime="2023-12-04T13:03:45.3159009">
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
        <ProjectInformation />
      </data>
    </addData>
  </contentHeader>
  <types>
    <dataTypes />
    <pous />
  </types>
  <instances>
    <configurations />
  </instances>
  <addData>
    <data name="http://www.3s-software.com/plcopenxml/application" handleUnknown="implementation">
      <resource name="Builder1">
        <task name="PlcTask" interval="PT0S" priority="20">
          <pouInstance name="MAIN" typeName="">
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml" />
            </documentation>
          </pouInstance>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
              <TaskSettings KindOfTask="Cyclic" Interval="10000" IntervalUnit="us">
                <Watchdog Enabled="false" TimeUnit="ms" />
              </TaskSettings>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>c38b7f9d-47fb-40d3-8e5c-917bf3dc4e9b</ObjectId>
            </data>
          </addData>
        </task>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interface" handleUnknown="implementation">
            <Interface name="ITF_Builder" ObjectId="e24ff3e0-fc1d-43fd-8ff3-5b8605ea8f49">
              <Methods>
                <Method name="Set_Main_Part" ObjectId="880c3ec8-8188-4322-844a-44596d2060a1">
                  <interface>
                    <inputVars>
                      <variable name="mainPart">
                        <type>
                          <string />
                        </type>
                        <documentation>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">Illustrative value (object because it is a TRING) to be set as a product part</xhtml>
                        </documentation>
                      </variable>
                    </inputVars>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Illustrative method of the pattern to set the main part</xhtml>
                    </documentation>
                  </interface>
                  <InterfaceAsPlainText>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">///Illustrative method of the pattern to set the main part
METHOD Set_Main_Part
VAR_INPUT
	///Illustrative value (object because it is a TRING) to be set as a product part
	mainPart: STRING;
END_VAR
</xhtml>
                  </InterfaceAsPlainText>
                  <addData />
                </Method>
                <Method name="Set_Part1" ObjectId="ba5e6b0c-afe1-439b-b293-8ef6e16fba0f">
                  <interface>
                    <inputVars>
                      <variable name="part1">
                        <type>
                          <string />
                        </type>
                        <documentation>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">Illustrative value (object because it is a TRING) to be set as a product part</xhtml>
                        </documentation>
                      </variable>
                    </inputVars>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Illustrative method of the pattern to set the part1</xhtml>
                    </documentation>
                  </interface>
                  <InterfaceAsPlainText>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">///Illustrative method of the pattern to set the part1
METHOD Set_Part1
VAR_INPUT
	///Illustrative value (object because it is a TRING) to be set as a product part
	part1: STRING;
END_VAR
</xhtml>
                  </InterfaceAsPlainText>
                  <addData />
                </Method>
                <Method name="Set_Part2" ObjectId="3ce61840-2c83-438f-b3d8-77afacd48f45">
                  <interface>
                    <inputVars>
                      <variable name="part2">
                        <type>
                          <string />
                        </type>
                        <documentation>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">Illustrative value (object because it is a TRING) to be set as a product part</xhtml>
                        </documentation>
                      </variable>
                    </inputVars>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Illustrative method of the pattern to set the part2</xhtml>
                    </documentation>
                  </interface>
                  <InterfaceAsPlainText>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">///Illustrative method of the pattern to set the part2
METHOD Set_Part2
VAR_INPUT
	///Illustrative value (object because it is a TRING) to be set as a product part
	part2: STRING;
END_VAR
</xhtml>
                  </InterfaceAsPlainText>
                  <addData />
                </Method>
                <Method name="Set_Part3" ObjectId="f2f9a603-a9a3-45ff-8f9e-92e56484efe2">
                  <interface>
                    <inputVars>
                      <variable name="part3">
                        <type>
                          <string />
                        </type>
                        <documentation>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">Illustrative value (object because it is a TRING) to be set as a product part</xhtml>
                        </documentation>
                      </variable>
                    </inputVars>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Illustrative method of the pattern to set the part3</xhtml>
                    </documentation>
                  </interface>
                  <InterfaceAsPlainText>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">///Illustrative method of the pattern to set the part3
METHOD Set_Part3
VAR_INPUT
	///Illustrative value (object because it is a TRING) to be set as a product part
	part3: STRING;
END_VAR
</xhtml>
                  </InterfaceAsPlainText>
                  <addData />
                </Method>
              </Methods>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">///Builder interface to declare all needed parts to be built
INTERFACE ITF_Builder
</xhtml>
              </InterfaceAsPlainText>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Builder interface to declare all needed parts to be built</xhtml>
              </documentation>
              <addData />
            </Interface>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="ConcreteBuilder" pouType="functionBlock">
              <interface>
                <localVars>
                  <variable name="localProduct">
                    <type>
                      <derived name="Product" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Holds an internal reference to how the final product shoud be so the builder class can build it on the fly /// Contiene una referencia interna sobre cómo debe ser el producto final para que la clase constructora pueda construirlo sobre la marcha.
 without any help from other classes exepting the Director class that is going to be passing the special /// sin ninguna ayuda de otras clases excepto la clase Director que va a pasar el especial
specifications to the builder.///especificaciones para el constructor.</xhtml>
                    </documentation>
                  </variable>
                  <variable name="specifications">
                    <type>
                      <array>
                        <dimension lower="1" upper="4" />
                        <baseType>
                          <string />
                        </baseType>
                      </array>
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Stores the specifications, sent by the client, of the final product to be built.
Almacena las especificaciones, enviadas por el cliente, del producto final a construir.</xhtml>
                    </documentation>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
                    <Inheritance>
                      <Implements>ITF_Builder</Implements>
                    </Inheritance>
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">This is the concrete builder class, reponsible for building the final product object</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="fb_init" ObjectId="285337ea-f8ae-468f-a35e-d4c54afa691a">
                    <interface>
                      <inputVars>
                        <variable name="bInitRetains">
                          <type>
                            <BOOL />
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml"> TRUE: the Retain-variables are initialized (reset warm / reset cold)</xhtml>
                          </documentation>
                        </variable>
                        <variable name="bInCopyCode">
                          <type>
                            <BOOL />
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml"> TRUE  the instance will be copied to the copy-code afterward (online change)	</xhtml>
                          </documentation>
                        </variable>
                        <variable name="specs">
                          <type>
                            <array>
                              <dimension lower="1" upper="4" />
                              <baseType>
                                <string />
                              </baseType>
                            </array>
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">The constructor receives the specifications for this ConcreteBuilder instance 
Just in case the concrete builder could change the specifications in the future, otherwise
 this specifications should be constant.</xhtml>
                          </documentation>
                        </variable>
                      </inputVars>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">//Stores the specifications on its own specifications field.
THIS^.specifications := specs;</xhtml>
                      </ST>
                    </body>
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD fb_init
VAR_INPUT
	/// TRUE: the Retain-variables are initialized (reset warm / reset cold)
	bInitRetains: BOOL;
	/// TRUE  the instance will be copied to the copy-code afterward (online change)	
	bInCopyCode: BOOL;
	///The constructor receives the specifications for this ConcreteBuilder instance 
	///Just in case the concrete builder could change the specifications in the future, otherwise
	/// this specifications should be constant.
	specs: ARRAY[1..4] OF STRING;
END_VAR
</xhtml>
                    </InterfaceAsPlainText>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="Get_Main_Part" ObjectId="0fcd98b9-6591-41a6-9227-07f56dc4fb36">
                    <interface>
                      <returnType>
                        <string />
                      </returnType>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Illustrative method of the pattern to get the main part</xhtml>
                      </documentation>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">//Returns the object stored in the built product THIS^.localProduct.mainPart
Get_Main_Part := THIS^.localProduct.mainPart;</xhtml>
                      </ST>
                    </body>
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">///Illustrative method of the pattern to get the main part
METHOD Get_Main_Part : STRING
</xhtml>
                    </InterfaceAsPlainText>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="Get_Part1" ObjectId="2e656caa-41fb-45e8-84ff-e2cc16f47d7a">
                    <interface>
                      <returnType>
                        <string />
                      </returnType>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Illustrative method of the pattern to get the part1</xhtml>
                      </documentation>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">//Returns the object stored in the built product THIS^.localProduct.part1
Get_Part1 := THIS^.localProduct.part1;</xhtml>
                      </ST>
                    </body>
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">///Illustrative method of the pattern to get the part1
METHOD Get_Part1 : STRING
</xhtml>
                    </InterfaceAsPlainText>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="Get_Part2" ObjectId="4e20c2f9-50bc-415c-8015-1ee4a87f7c1a">
                    <interface>
                      <returnType>
                        <string />
                      </returnType>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Illustrative method of the pattern to get the part2</xhtml>
                      </documentation>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">//Returns the object stored in the built product THIS^.localProduct.part2
Get_Part2 := THIS^.localProduct.part2;</xhtml>
                      </ST>
                    </body>
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">///Illustrative method of the pattern to get the part2
METHOD Get_Part2 : STRING
</xhtml>
                    </InterfaceAsPlainText>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="Get_Part3" ObjectId="20ceee38-6ea3-4ac4-80d9-2f3ed38a41d4">
                    <interface>
                      <returnType>
                        <string />
                      </returnType>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Illustrative method of the pattern to get the part3</xhtml>
                      </documentation>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">//Returns the object stored in the built product THIS^.localProduct.part3
Get_Part3 := THIS^.localProduct.part3;</xhtml>
                      </ST>
                    </body>
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">///Illustrative method of the pattern to get the part3
METHOD Get_Part3 : STRING
</xhtml>
                    </InterfaceAsPlainText>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="Get_Result" ObjectId="9c876e7c-0afe-4fde-8c33-5679cc1096c2">
                    <interface>
                      <returnType>
                        <derived name="Product" />
                      </returnType>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Illustrative method of the pattern</xhtml>
                      </documentation>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">//The concrete builder, after it builts the final object of class product, returns the 
// final product object 
Get_Result := THIS^.localProduct;</xhtml>
                      </ST>
                    </body>
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">///Illustrative method of the pattern
METHOD Get_Result : Product
</xhtml>
                    </InterfaceAsPlainText>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="Set_Main_Part" ObjectId="47616bbe-e621-41a6-9c5a-d481a6eef8d4">
                    <interface>
                      <inputVars>
                        <variable name="mainPart">
                          <type>
                            <string />
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">Illustrative value (object because it is a TRING) to be set as a product part</xhtml>
                          </documentation>
                        </variable>
                      </inputVars>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Illustrative method of the pattern to set the main part</xhtml>
                      </documentation>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">//Sets the passed value to its corresponding field. 
//We can say that the the final product is in process of being built.
//So this is a step into building the final product done by the builder.
THIS^.localProduct.mainPart := mainPart;

</xhtml>
                      </ST>
                    </body>
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">///Illustrative method of the pattern to set the main part
METHOD Set_Main_Part
VAR_INPUT
	///Illustrative value (object because it is a TRING) to be set as a product part
	mainPart: STRING;
END_VAR
</xhtml>
                    </InterfaceAsPlainText>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="Set_Part1" ObjectId="41b59a3a-a42d-460b-bf25-3d4c90d22be0">
                    <interface>
                      <inputVars>
                        <variable name="part1">
                          <type>
                            <string />
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">Illustrative value (object because it is a TRING) to be set as a product part</xhtml>
                          </documentation>
                        </variable>
                      </inputVars>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Illustrative method of the pattern to set the part1</xhtml>
                      </documentation>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">//Sets the passed value to its corresponding field. 
//We can say that the the final product is in process of being built.
//So this is a step into building the final product done by the builder.
THIS^.localProduct.part1 := part1;</xhtml>
                      </ST>
                    </body>
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">///Illustrative method of the pattern to set the part1
METHOD Set_Part1
VAR_INPUT
	///Illustrative value (object because it is a TRING) to be set as a product part
	part1: STRING;
END_VAR
</xhtml>
                    </InterfaceAsPlainText>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="Set_Part2" ObjectId="d3f29ad8-51d4-4463-82f1-675dbebcfe4a">
                    <interface>
                      <inputVars>
                        <variable name="part2">
                          <type>
                            <string />
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">Illustrative value (object because it is a TRING) to be set as a product part</xhtml>
                          </documentation>
                        </variable>
                      </inputVars>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Illustrative method of the pattern to set the part2</xhtml>
                      </documentation>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">//Sets the passed value to its corresponding field. 
//We can say that the the final product is in process of being built.
//So this is a step into building the final product done by the builder.
THIS^.localProduct.part2 := part2;</xhtml>
                      </ST>
                    </body>
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">///Illustrative method of the pattern to set the part2
METHOD Set_Part2
VAR_INPUT
	///Illustrative value (object because it is a TRING) to be set as a product part
	part2: STRING;
END_VAR
</xhtml>
                    </InterfaceAsPlainText>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="Set_Part3" ObjectId="e1fb3aa5-8da4-4e2d-bac1-fc8a437ba7e2">
                    <interface>
                      <inputVars>
                        <variable name="part3">
                          <type>
                            <string />
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">Illustrative value (object because it is a TRING) to be set as a product part</xhtml>
                          </documentation>
                        </variable>
                      </inputVars>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Illustrative method of the pattern to set the part3</xhtml>
                      </documentation>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">//Sets the passed value to its corresponding field. 
//We can say that the the final product is in process of being built.
//So this is a step into building the final product done by the builder.
THIS^.localProduct.part3 := part3;  </xhtml>
                      </ST>
                    </body>
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">///Illustrative method of the pattern to set the part3
METHOD Set_Part3
VAR_INPUT
	///Illustrative value (object because it is a TRING) to be set as a product part
	part3: STRING;
END_VAR
</xhtml>
                    </InterfaceAsPlainText>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                  <InterfaceAsPlainText>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">///This is the concrete builder class, reponsible for building the final product object
FUNCTION_BLOCK ConcreteBuilder IMPLEMENTS ITF_Builder
VAR
	///Holds an internal reference to how the final product shoud be so the builder class can build it on the fly /// Contiene una referencia interna sobre cómo debe ser el producto final para que la clase constructora pueda construirlo sobre la marcha.
	/// without any help from other classes exepting the Director class that is going to be passing the special /// sin ninguna ayuda de otras clases excepto la clase Director que va a pasar el especial
	///specifications to the builder.///especificaciones para el constructor.
	localProduct: Product;
	///Stores the specifications, sent by the client, of the final product to be built.
	///Almacena las especificaciones, enviadas por el cliente, del producto final a construir.
	specifications: ARRAY[1..4] OF STRING;
END_VAR
</xhtml>
                  </InterfaceAsPlainText>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>b8460dc0-86aa-4ac1-b552-70b1eb5e82d2</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="Director" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="inputConcreteBuilder">
                    <type>
                      <derived name="ConcreteBuilder" />
                    </type>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/inputassignments" handleUnknown="implementation">
                        <InputAssignments>
                          <InputAssignment>
                            <Name>specs</Name>
                            <Value>inputConcreteBuilder.specifications</Value>
                          </InputAssignment>
                        </InputAssignments>
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                        <Attributes>
                          <Attribute Name="old_input_assignments" Value="" />
                        </Attributes>
                      </data>
                    </addData>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Reference to the builder that is going to be building the final product object.
Referencia al constructor que construirá el objeto del producto final.</xhtml>
                    </documentation>
                  </variable>
                </inputVars>
                <localVars>
                  <variable name="concreteBuilder">
                    <type>
                      <derived name="ConcreteBuilder" />
                    </type>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/inputassignments" handleUnknown="implementation">
                        <InputAssignments>
                          <InputAssignment>
                            <Name>specs</Name>
                            <Value>THIS^.concreteBuilder.specifications</Value>
                          </InputAssignment>
                        </InputAssignments>
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                        <Attributes>
                          <Attribute Name="old_input_assignments" Value="" />
                        </Attributes>
                      </data>
                    </addData>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Holds a reference to the concrete builder object to send the specifications of the final product to it.
 Contiene una referencia al objeto constructor concreto para enviarle las especificaciones del producto final</xhtml>
                    </documentation>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="enable_dynamic_creation" Value="" />
                    </Attributes>
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">The director class is responsible to delegate the construction of the final product object 
 to a concrete builder object.</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">//Stores the reference to which builder will be building the final product object in its own field THIS^.concreteBuilder
//Almacena la referencia a qué constructor construirá el objeto del producto final en su propio campo THIS^.concreteBuilder
THIS^.concreteBuilder := inputConcreteBuilder;</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="Construct" ObjectId="d97b768c-51f3-48ff-9224-56991961062d">
                    <interface>
                      <returnType>
                        <derived name="Product" />
                      </returnType>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">This method is going to be called by the client when a new Product object must be built</xhtml>
                      </documentation>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">//The Director tells its concreteBuilder instance to build the final product step by step passing the specifications stored in the 
// concreteBuilder array THIS^.specifications[1..4]

//Step 1 "Main Part"
THIS^.concreteBuilder.Set_Main_Part(THIS^.concreteBuilder.specifications[1]);
//Step 2 "Part 1"
THIS^.concreteBuilder.Set_Part1(THIS^.concreteBuilder.specifications[2]);
//Step 3 "Part 2"
THIS^.concreteBuilder.Set_Part2(THIS^.concreteBuilder.specifications[3]);
//Step 4 "Part 3"
THIS^.concreteBuilder.Set_Part3(THIS^.concreteBuilder.specifications[4]);

//Finally the concreteBuilder instance in the Director object delivers the final result as a Product object
//Finalmente, la instancia de concreteBuilder en el objeto Director entrega el resultado final como un objeto Producto
Construct := THIS^.concreteBuilder.Get_Result();</xhtml>
                      </ST>
                    </body>
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">///This method is going to be called by the client when a new Product object must be built
METHOD Construct : Product
</xhtml>
                    </InterfaceAsPlainText>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="fb_init" ObjectId="7c138ef8-fc50-4b2f-b0e4-a2bb5709b6d5">
                    <interface>
                      <inputVars>
                        <variable name="bInitRetains">
                          <type>
                            <BOOL />
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml"> TRUE: the Retain-variables are initialized (reset warm / reset cold)</xhtml>
                          </documentation>
                        </variable>
                        <variable name="bInCopyCode">
                          <type>
                            <BOOL />
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml"> TRUE  the instance will be copied to the copy-code afterward (online change)</xhtml>
                          </documentation>
                        </variable>
                        <variable name="inputConcreteBuilder">
                          <type>
                            <derived name="ConcreteBuilder" />
                          </type>
                          <addData>
                            <data name="http://www.3s-software.com/plcopenxml/inputassignments" handleUnknown="implementation">
                              <InputAssignments>
                                <InputAssignment>
                                  <Name>specs</Name>
                                  <Value>defaultArray</Value>
                                </InputAssignment>
                              </InputAssignments>
                            </data>
                            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                              <Attributes>
                                <Attribute Name="old_input_assignments" Value="" />
                              </Attributes>
                            </data>
                          </addData>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">Reference a concreteBuilder instance to instanciate the Director.</xhtml>
                          </documentation>
                        </variable>
                      </inputVars>
                      <localVars>
                        <variable name="defaultArray">
                          <type>
                            <array>
                              <dimension lower="1" upper="4" />
                              <baseType>
                                <string />
                              </baseType>
                            </array>
                          </type>
                          <initialValue>
                            <arrayValue>
                              <value>
                                <simpleValue value="'Default'" />
                              </value>
                              <value>
                                <simpleValue value="'Default'" />
                              </value>
                              <value>
                                <simpleValue value="'Default'" />
                              </value>
                              <value>
                                <simpleValue value="'Default'" />
                              </value>
                            </arrayValue>
                          </initialValue>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to isntanciate the concreteBuilder instance on the input section. It does not affect the Directors instanciation.</xhtml>
                          </documentation>
                        </variable>
                      </localVars>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">This constructor is called at instanciation it is necessary to instanciate the Director instance.
The specifications of the concreteBuilder instance stored in the Director instance should be set first by the client
 otherwise a Data Recursion error is caused</xhtml>
                      </documentation>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">//Creates the concreteBuilder instance that will be building the final product object in its own field THIS^.concreteBuilder
//This instance is empty because we can not use Data Recursion with the inputConcreteInstance instanciation.
//So this concreteBuilder instance should be changed by the client before a Construct() request is called on the Director for the first time only.
THIS^.concreteBuilder := inputConcreteBuilder;</xhtml>
                      </ST>
                    </body>
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">///This constructor is called at instanciation it is necessary to instanciate the Director instance.
///The specifications of the concreteBuilder instance stored in the Director instance should be set first by the client
/// otherwise a Data Recursion error is caused
METHOD fb_init
VAR_INPUT
	/// TRUE: the Retain-variables are initialized (reset warm / reset cold)
	bInitRetains: BOOL;
	/// TRUE  the instance will be copied to the copy-code afterward (online change)
	bInCopyCode: BOOL;
	///Reference a concreteBuilder instance to instanciate the Director.
	{attribute 'old_input_assignments' := ''}
	inputConcreteBuilder: ConcreteBuilder(specs := defaultArray);
END_VAR
VAR
	///Variable to isntanciate the concreteBuilder instance on the input section. It does not affect the Directors instanciation.
	defaultArray: ARRAY[1..4] OF STRING := ['Default', 'Default', 'Default', 'Default'];
END_VAR
</xhtml>
                    </InterfaceAsPlainText>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                  <InterfaceAsPlainText>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">///The director class is responsible to delegate the construction of the final product object 
/// to a concrete builder object.
{attribute 'enable_dynamic_creation' := ''}
FUNCTION_BLOCK Director
VAR_INPUT
	///Reference to the builder that is going to be building the final product object.
	///Referencia al constructor que construirá el objeto del producto final.
	{attribute 'old_input_assignments' := ''}
	inputConcreteBuilder: ConcreteBuilder(specs := inputConcreteBuilder.specifications);
END_VAR
VAR
	///Holds a reference to the concrete builder object to send the specifications of the final product to it.
	/// Contiene una referencia al objeto constructor concreto para enviarle las especificaciones del producto final
	{attribute 'old_input_assignments' := ''}
	concreteBuilder: ConcreteBuilder(specs := THIS^.concreteBuilder.specifications);
END_VAR
</xhtml>
                  </InterfaceAsPlainText>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>4a39953a-3fcc-455a-aeed-2223e5fc8a6f</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="Product" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="mainPart">
                    <type>
                      <string />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">List of possible parts to be build in a final Product object</xhtml>
                    </documentation>
                  </variable>
                  <variable name="part1">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="part2">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="part3">
                    <type>
                      <string />
                    </type>
                  </variable>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="enable_dynamic_creation" Value="" />
                    </Attributes>
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">The class Product is just a plain bluprint of the components of the object to be built.
The final Product may ot may not contain the all the Parts listed on the Product declaration
 rather only the parts in the specifications sent by the client.</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="toString" ObjectId="47378aee-eb48-4464-9de2-a386a7b2f53a">
                    <interface>
                      <returnType>
                        <string />
                      </returnType>
                      <localVars>
                        <variable name="tempString">
                          <type>
                            <string />
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">Local variable to join together and store the pieces of String</xhtml>
                          </documentation>
                        </variable>
                      </localVars>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">Method to be used in the visualization element for an easier String handling</xhtml>
                      </documentation>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">//tempString joins together "Main Part" and "Part 1" of the Product object
tempString := CONCAT(THIS^.mainPart , THIS^.part1);
//tempString joins together its current value and "Part 2" of the Product object
tempString := CONCAT(tempString , THIS^.part2);
//tempString joins together its current value and "Part 3" of the Product object
tempString := CONCAT(tempString , THIS^.part3);
//The final result is sent as the output of this method
toString := tempString;</xhtml>
                      </ST>
                    </body>
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">///Method to be used in the visualization element for an easier String handling
METHOD toString : STRING
VAR
	///Local variable to join together and store the pieces of String
	tempString: STRING;
END_VAR
</xhtml>
                    </InterfaceAsPlainText>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                  <InterfaceAsPlainText>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">///The class Product is just a plain bluprint of the components of the object to be built.
///The final Product may ot may not contain the all the Parts listed on the Product declaration
/// rather only the parts in the specifications sent by the client.
{attribute 'enable_dynamic_creation' := ''}
FUNCTION_BLOCK Product
VAR_INPUT
	///List of possible parts to be build in a final Product object
	mainPart: STRING;
	part1: STRING;
	part2: STRING;
	part3: STRING;
END_VAR
</xhtml>
                  </InterfaceAsPlainText>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>c72cef4b-b042-46fa-acdc-7659f6206b73</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="MAIN" pouType="program">
              <interface>
                <localVars>
                  <variable name="specsBuilder1">
                    <type>
                      <array>
                        <dimension lower="1" upper="4" />
                        <baseType>
                          <string />
                        </baseType>
                      </array>
                    </type>
                    <initialValue>
                      <arrayValue>
                        <value>
                          <simpleValue value="'Red Chassis '" />
                        </value>
                        <value>
                          <simpleValue value="'Sedan '" />
                        </value>
                        <value>
                          <simpleValue value="'Motor 1.4cc '" />
                        </value>
                        <value>
                          <simpleValue value="'Aluminium tires'" />
                        </value>
                      </arrayValue>
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Three specifications arrays to be used by the same Director</xhtml>
                    </documentation>
                  </variable>
                  <variable name="specsBuilder2">
                    <type>
                      <array>
                        <dimension lower="1" upper="4" />
                        <baseType>
                          <string />
                        </baseType>
                      </array>
                    </type>
                    <initialValue>
                      <arrayValue>
                        <value>
                          <simpleValue value="'Black Chassis '" />
                        </value>
                        <value>
                          <simpleValue value="'Hatchback '" />
                        </value>
                        <value>
                          <simpleValue value="'Motor 2.0cc '" />
                        </value>
                        <value>
                          <simpleValue value="'Chrome plated tires'" />
                        </value>
                      </arrayValue>
                    </initialValue>
                  </variable>
                  <variable name="specsBuilder3">
                    <type>
                      <array>
                        <dimension lower="1" upper="4" />
                        <baseType>
                          <string />
                        </baseType>
                      </array>
                    </type>
                    <initialValue>
                      <arrayValue>
                        <value>
                          <simpleValue value="'White Chassis '" />
                        </value>
                        <value>
                          <simpleValue value="'Sport '" />
                        </value>
                        <value>
                          <simpleValue value="'Motor 2.5cc '" />
                        </value>
                        <value>
                          <simpleValue value="'Ligth aluminium tires'" />
                        </value>
                      </arrayValue>
                    </initialValue>
                  </variable>
                  <variable name="tableArray">
                    <type>
                      <array>
                        <dimension lower="1" upper="4" />
                        <dimension lower="1" upper="3" />
                        <baseType>
                          <string />
                        </baseType>
                      </array>
                    </type>
                    <initialValue>
                      <arrayValue>
                        <value>
                          <simpleValue value="'Red Chassis'" />
                        </value>
                        <value>
                          <simpleValue value="'Black Chassis'" />
                        </value>
                        <value>
                          <simpleValue value="'White Chassis'" />
                        </value>
                        <value>
                          <simpleValue value="'Sedan'" />
                        </value>
                        <value>
                          <simpleValue value="'Hatchback'" />
                        </value>
                        <value>
                          <simpleValue value="'Sport'" />
                        </value>
                        <value>
                          <simpleValue value="'Motor 1.4cc'" />
                        </value>
                        <value>
                          <simpleValue value="'Motor 2.0cc'" />
                        </value>
                        <value>
                          <simpleValue value="'Motor 2.5cc'" />
                        </value>
                        <value>
                          <simpleValue value="'Aluminium tires'" />
                        </value>
                        <value>
                          <simpleValue value="'Chrome plated tires'" />
                        </value>
                        <value>
                          <simpleValue value="'Ligth aluminium tires'" />
                        </value>
                      </arrayValue>
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Special array for the visualization element</xhtml>
                    </documentation>
                  </variable>
                  <variable name="sMessageLog">
                    <type>
                      <string length="500" />
                    </type>
                    <initialValue>
                      <simpleValue value="'Waiting for your request'" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">String variable to interact and respond to the client in the visualization element</xhtml>
                    </documentation>
                  </variable>
                  <variable name="bRequest">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Boolean value to react to a clients request</xhtml>
                    </documentation>
                  </variable>
                  <variable name="bRow">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Boolean and integer values to receive data from the tables in the visualization element
The boolean value validates if the client has chosen a valid option</xhtml>
                    </documentation>
                  </variable>
                  <variable name="iRow">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="0" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">The integer value hold the reference to the array of specifications</xhtml>
                    </documentation>
                  </variable>
                  <variable name="prod">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="Product" />
                        </baseType>
                      </pointer>
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">A pointer to Poduct to dynamically create and delete product objects at the clients requests</xhtml>
                    </documentation>
                  </variable>
                  <variable name="concreteBuilder1">
                    <type>
                      <derived name="ConcreteBuilder" />
                    </type>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/inputassignments" handleUnknown="implementation">
                        <InputAssignments>
                          <InputAssignment>
                            <Name>specs</Name>
                            <Value>specsBuilder1</Value>
                          </InputAssignment>
                        </InputAssignments>
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                        <Attributes>
                          <Attribute Name="old_input_assignments" Value="" />
                        </Attributes>
                      </data>
                    </addData>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Three ConcreteBuilder instances to be passed to the Director and build the final Product objects
Each ConcreteBuilder intance is initiated with its own specifications</xhtml>
                    </documentation>
                  </variable>
                  <variable name="concreteBuilder2">
                    <type>
                      <derived name="ConcreteBuilder" />
                    </type>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/inputassignments" handleUnknown="implementation">
                        <InputAssignments>
                          <InputAssignment>
                            <Name>specs</Name>
                            <Value>specsBuilder2</Value>
                          </InputAssignment>
                        </InputAssignments>
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                        <Attributes>
                          <Attribute Name="old_input_assignments" Value="" />
                        </Attributes>
                      </data>
                    </addData>
                  </variable>
                  <variable name="concreteBuilder3">
                    <type>
                      <derived name="ConcreteBuilder" />
                    </type>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/inputassignments" handleUnknown="implementation">
                        <InputAssignments>
                          <InputAssignment>
                            <Name>specs</Name>
                            <Value>specsBuilder3</Value>
                          </InputAssignment>
                        </InputAssignments>
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                        <Attributes>
                          <Attribute Name="old_input_assignments" Value="" />
                        </Attributes>
                      </data>
                    </addData>
                  </variable>
                  <variable name="aDirector">
                    <type>
                      <derived name="Director" />
                    </type>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/inputassignments" handleUnknown="implementation">
                        <InputAssignments>
                          <InputAssignment>
                            <Name>inputConcreteBuilder</Name>
                            <Value>concreteBuilder1</Value>
                          </InputAssignment>
                        </InputAssignments>
                      </data>
                      <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                        <Attributes>
                          <Attribute Name="old_input_assignments" Value="" />
                        </Attributes>
                      </data>
                    </addData>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">A Director instance that is instanciated with a ConcreteBuilder instance.
 later on in the program the specific ConcreteBuilder instance could be changed dynamically</xhtml>
                    </documentation>
                  </variable>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">//The visualization element lets the client chose an option blueprint to build a Car
//Once the client has chosen his prefered option, he can then procede to make the request of construction.
//The bottom rectangle will handle all possible responses from te application to the client.

//If the client makes a request in the visualization element
IF bRequest
	THEN
	//CASE instruction to handle all possible cases of the cleint's request
	//The value to verify is iRow to specify which row the client has chosen
	CASE iRow OF
		//If the client has chosen the "Title" row from the visualization element we notify the client to chose a Car blueprint
		0: 	sMessageLog := 'You must first select a Car to make a request. Waiting for your request';
			//Once this reques has been handled, the reques flag is set to FALSE
			bRequest := FALSE;
		
		//If the client has chosen the first option row, the builder notifies the client about the received request
		1:	sMessageLog := 'Your red car is being built';
			//A new product object is created on demand
			prod := __NEW(Product);
			//The director object receives the ConcreteBuilder object to be used based on the clients choice
			aDirector(inputConcreteBuilder := concreteBuilder1);
			//The Product object request the construction to the Director.
			prod^ := aDirector.Construct();
			//The Builder's response after the Director object has handled the proper request
			sMessageLog := CONCAT( 'Your car has been built. It has ' , prod^.toString());
			//Once this reques has been handled, the reques flag is set to FALSE
			bRequest := FALSE;
			//Once this reques has been handled, the Product object is deleted to free memory
			__DELETE(prod);
			
		//If the client has chosen the second option row, the builder notifies the client about the received request	
		2:	sMessageLog := 'Your black car is being built';
			//A new product object is created on demand
			prod := __NEW(Product);
			//The director object receives the ConcreteBuilder object to be used based on the clients choice
			aDirector(inputConcreteBuilder := concreteBuilder2);
			//The Product object request the construction to the Director.
			prod^ := aDirector.Construct();
			//The Builder's response after the Director object has handled the proper request
			sMessageLog := CONCAT( 'Your car has been built. It has ' , prod^.toString());
			//Once this reques has been handled, the reques flag is set to FALSE
			bRequest := FALSE;
			//Once this reques has been handled, the Product object is deleted to free memory
			__DELETE(prod);
			
		//If the client has chosen the third option row, the builder notifies the client about the received request	
		3: sMessageLog := 'Your white car is being built';
			//A new product object is created on demand
			prod := __NEW(Product);
			//The director object receives the ConcreteBuilder object to be used based on the clients choice
			aDirector(inputConcreteBuilder := concreteBuilder3);
			//The Product object request the construction to the Director.
			prod^ := aDirector.Construct();
			//The Builder's response after the Director object has handled the proper request
			sMessageLog := CONCAT( 'Your car has been built. It has ' , prod^.toString());
			//Once this reques has been handled, the reques flag is set to FALSE
			bRequest := FALSE;
			//Once this reques has been handled, the Product object is deleted to free memory
			__DELETE(prod);
			
		//If the client makes any unrecognized request.	
		ELSE
			sMessageLog := 'That is not a valir selection. Waiting for your request';
			//Once this reques has been handled, the reques flag is set to FALSE
			bRequest := FALSE;

	END_CASE
END_IF</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                  <InterfaceAsPlainText>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">PROGRAM MAIN
VAR
	///Three specifications arrays to be used by the same Director
	specsBuilder1: ARRAY[1..4] OF STRING := ['Red Chassis ', 'Sedan ', 'Motor 1.4cc ', 'Aluminium tires'];
	specsBuilder2: ARRAY[1..4] OF STRING := ['Black Chassis ', 'Hatchback ', 'Motor 2.0cc ', 'Chrome plated tires'];
	specsBuilder3: ARRAY[1..4] OF STRING := ['White Chassis ', 'Sport ', 'Motor 2.5cc ', 'Ligth aluminium tires'];
	///Special array for the visualization element
	tableArray: ARRAY[1..4, 1..3] OF STRING := ['Red Chassis', 'Black Chassis', 'White Chassis', 'Sedan', 'Hatchback', 'Sport', 'Motor 1.4cc', 'Motor 2.0cc', 'Motor 2.5cc', 'Aluminium tires', 'Chrome plated tires', 'Ligth aluminium tires'];
	///String variable to interact and respond to the client in the visualization element
	sMessageLog: STRING(500) := 'Waiting for your request';
	///Boolean value to react to a clients request
	bRequest: BOOL := FALSE;
	///Boolean and integer values to receive data from the tables in the visualization element
	///The boolean value validates if the client has chosen a valid option
	bRow: BOOL := FALSE;
	///The integer value hold the reference to the array of specifications
	iRow: INT := 0;
	///A pointer to Poduct to dynamically create and delete product objects at the clients requests
	prod: POINTER TO Product;
	///Three ConcreteBuilder instances to be passed to the Director and build the final Product objects
	///Each ConcreteBuilder intance is initiated with its own specifications
	{attribute 'old_input_assignments' := ''}
	concreteBuilder1: ConcreteBuilder(specs := specsBuilder1);
	{attribute 'old_input_assignments' := ''}
	concreteBuilder2: ConcreteBuilder(specs := specsBuilder2);
	{attribute 'old_input_assignments' := ''}
	concreteBuilder3: ConcreteBuilder(specs := specsBuilder3);
	///A Director instance that is instanciated with a ConcreteBuilder instance.
	/// later on in the program the specific ConcreteBuilder instance could be changed dynamically
	{attribute 'old_input_assignments' := ''}
	aDirector: Director(inputConcreteBuilder := concreteBuilder1);	
END_VAR

</xhtml>
                  </InterfaceAsPlainText>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>33e7be01-b643-4e42-9b4f-203a141f47f7</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/libraries" handleUnknown="implementation">
            <Libraries>
              <Library Name="#System_VisuElemMeter" Namespace="VisuElemMeter" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemMeter, 3.5.13.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
              <Library Name="#System_VisuElems" Namespace="VisuElems" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElems, 3.5.13.40 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
              <Library Name="#System_VisuElemsSpecialControls" Namespace="VisuElemsSpecialControls" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsSpecialControls, 3.5.13.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
              <Library Name="#System_VisuElemsWinControls" Namespace="VisuElemsWinControls" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsWinControls, 3.5.13.20 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
              <Library Name="#System_VisuElemTextEditor" Namespace="VisuElemTextEditor" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemTextEditor, 3.5.13.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
              <Library Name="#system_visuinputs" Namespace="visuinputs" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="visuinputs, 3.5.13.0 (system)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
              <Library Name="#System_VisuNativeControl" Namespace="VisuNativeControl" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuNativeControl, 3.5.13.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
              <Library Name="#Tc2_Standard" Namespace="Tc2_Standard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Tc2_Standard, * (Beckhoff Automation GmbH)" />
              <Library Name="#Tc2_System" Namespace="Tc2_System" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Tc2_System, * (Beckhoff Automation GmbH)">
                <Parameters>
                  <Parameter Name="PARAM.TABLE_UPPER_BOUND" Value="15" />
                  <Parameter Name="PARAM.STRING_LENGTH_EXP" Value="255" />
                  <Parameter Name="PARAM.STRING_LENGTH_ADDRESS" Value="20" />
                  <Parameter Name="PARAM.STRING_LENGTH_COMMENT" Value="255" />
                  <Parameter Name="PARAM.STRING_LENGTH_OUTSTRING" Value="255" />
                  <Parameter Name="PARAM.TABLE_SHOW_VALID_ITEMS" Value="FALSE" />
                </Parameters>
              </Library>
              <Library Name="#Tc3_Module" Namespace="Tc3_Module" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Tc3_Module, * (Beckhoff Automation GmbH)" />
              <Library Name="VisuSymbols, 3.5.10.0 (System)" Namespace="VisuSymbols" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>2e53fbfe-8451-4f05-9061-5d660db86c6d</ObjectId>
                </data>
              </addData>
            </Libraries>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>03a7b99f-6507-4aca-a444-439205226ff4</ObjectId>
          </data>
        </addData>
      </resource>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/projectstructure" handleUnknown="discard">
      <ProjectStructure>
        <Object Name="Builder1" ObjectId="03a7b99f-6507-4aca-a444-439205226ff4">
          <Object Name="Administrador de bibliotecas" ObjectId="2e53fbfe-8451-4f05-9061-5d660db86c6d" />
          <Object Name="ConcreteBuilder" ObjectId="b8460dc0-86aa-4ac1-b552-70b1eb5e82d2">
            <Object Name="fb_init" ObjectId="285337ea-f8ae-468f-a35e-d4c54afa691a" />
            <Object Name="Get_Main_Part" ObjectId="0fcd98b9-6591-41a6-9227-07f56dc4fb36" />
            <Object Name="Get_Part1" ObjectId="2e656caa-41fb-45e8-84ff-e2cc16f47d7a" />
            <Object Name="Get_Part2" ObjectId="4e20c2f9-50bc-415c-8015-1ee4a87f7c1a" />
            <Object Name="Get_Part3" ObjectId="20ceee38-6ea3-4ac4-80d9-2f3ed38a41d4" />
            <Object Name="Get_Result" ObjectId="9c876e7c-0afe-4fde-8c33-5679cc1096c2" />
            <Object Name="Set_Main_Part" ObjectId="47616bbe-e621-41a6-9c5a-d481a6eef8d4" />
            <Object Name="Set_Part1" ObjectId="41b59a3a-a42d-460b-bf25-3d4c90d22be0" />
            <Object Name="Set_Part2" ObjectId="d3f29ad8-51d4-4463-82f1-675dbebcfe4a" />
            <Object Name="Set_Part3" ObjectId="e1fb3aa5-8da4-4e2d-bac1-fc8a437ba7e2" />
          </Object>
          <Object Name="Director" ObjectId="4a39953a-3fcc-455a-aeed-2223e5fc8a6f">
            <Object Name="Construct" ObjectId="d97b768c-51f3-48ff-9224-56991961062d" />
            <Object Name="fb_init" ObjectId="7c138ef8-fc50-4b2f-b0e4-a2bb5709b6d5" />
          </Object>
          <Object Name="ITF_Builder" ObjectId="e24ff3e0-fc1d-43fd-8ff3-5b8605ea8f49">
            <Object Name="Set_Main_Part" ObjectId="880c3ec8-8188-4322-844a-44596d2060a1" />
            <Object Name="Set_Part1" ObjectId="ba5e6b0c-afe1-439b-b293-8ef6e16fba0f" />
            <Object Name="Set_Part2" ObjectId="3ce61840-2c83-438f-b3d8-77afacd48f45" />
            <Object Name="Set_Part3" ObjectId="f2f9a603-a9a3-45ff-8f9e-92e56484efe2" />
          </Object>
          <Object Name="PlcTask" ObjectId="c38b7f9d-47fb-40d3-8e5c-917bf3dc4e9b" />
          <Folder Name="POUs">
            <Object Name="MAIN" ObjectId="33e7be01-b643-4e42-9b4f-203a141f47f7" />
          </Folder>
          <Object Name="Product" ObjectId="c72cef4b-b042-46fa-acdc-7659f6206b73">
            <Object Name="toString" ObjectId="47378aee-eb48-4464-9de2-a386a7b2f53a" />
          </Object>
        </Object>
      </ProjectStructure>
    </data>
  </addData>
</project>