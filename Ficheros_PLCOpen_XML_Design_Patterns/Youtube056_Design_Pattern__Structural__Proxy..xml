<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://www.plcopen.org/xml/tc6_0200">
  <fileHeader companyName="Beckhoff Automation GmbH" productName="TwinCAT PLC Control" productVersion="3.5.13.21" creationDateTime="2024-03-19T10:41:31.2000301" />
  <contentHeader name="Proxy" modificationDateTime="2024-03-19T10:41:31.2000301">
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
        <ProjectInformation />
      </data>
    </addData>
  </contentHeader>
  <types>
    <dataTypes />
    <pous />
  </types>
  <instances>
    <configurations />
  </instances>
  <addData>
    <data name="http://www.3s-software.com/plcopenxml/application" handleUnknown="implementation">
      <resource name="Proxy">
        <task name="PlcTask" interval="PT0S" priority="20">
          <pouInstance name="MAIN" typeName="">
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml" />
            </documentation>
          </pouInstance>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
              <TaskSettings KindOfTask="Cyclic" Interval="10000" IntervalUnit="us">
                <Watchdog Enabled="false" TimeUnit="ms" />
              </TaskSettings>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>60af3a3e-155c-415c-b008-fb30cf2bbb89</ObjectId>
            </data>
          </addData>
        </task>
        <globalVars name="GVL">
          <variable name="globalSubjectInstance">
            <type>
              <derived name="Realsubject" />
            </type>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">Realsubject class instance</xhtml>
            </documentation>
          </variable>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="qualified_only" Value="" />
              </Attributes>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">{attribute 'qualified_only' := ''}
VAR_GLOBAL
	///Realsubject class instance
	globalSubjectInstance: Realsubject;
END_VAR</xhtml>
              </InterfaceAsPlainText>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>70a67f79-b967-4931-9d3f-ea67b822d4cf</ObjectId>
            </data>
          </addData>
        </globalVars>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interface" handleUnknown="implementation">
            <Interface name="Subject_Interface" ObjectId="9b176648-f559-43a2-83ce-c145c4e85927">
              <Methods>
                <Method name="Get_Method" ObjectId="43ef36d3-139e-4bf2-9c1f-5b8936d55187">
                  <interface>
                    <returnType>
                      <INT />
                    </returnType>
                  </interface>
                  <InterfaceAsPlainText>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD Get_Method : INT
</xhtml>
                  </InterfaceAsPlainText>
                  <addData />
                </Method>
                <Method name="Set_Method" ObjectId="3c1b6c87-b1d5-4e04-802e-e3fea42eb71f">
                  <interface>
                    <inputVars>
                      <variable name="num">
                        <type>
                          <INT />
                        </type>
                        <documentation>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">Value to be set passed as an argument</xhtml>
                        </documentation>
                      </variable>
                    </inputVars>
                  </interface>
                  <InterfaceAsPlainText>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD Set_Method
VAR_INPUT
	///Value to be set passed as an argument
	num: INT;
END_VAR
</xhtml>
                  </InterfaceAsPlainText>
                  <addData />
                </Method>
              </Methods>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">INTERFACE Subject_Interface
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Interface>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="Proxy" pouType="functionBlock">
              <interface>
                <localVars>
                  <variable name="refToRealSubject">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="Realsubject" />
                        </baseType>
                      </pointer>
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to store the reference to the subject being protected</xhtml>
                    </documentation>
                  </variable>
                  <variable name="iTempPassword">
                    <type>
                      <INT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Last value of password entered by the client in the visualization element</xhtml>
                    </documentation>
                  </variable>
                </localVars>
                <globalVars>
                  <variable name="iRealPassword">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="1234" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Default password value for the request to be accepted</xhtml>
                    </documentation>
                  </variable>
                </globalVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
                    <Inheritance>
                      <Implements>Subject_Interface</Implements>
                    </Inheritance>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="enable_dynamic_creation" Value="" />
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="fb_init" ObjectId="1327e92f-7b7e-4067-9d60-7c17a8b9cb58">
                    <interface>
                      <inputVars>
                        <variable name="bInitRetains">
                          <type>
                            <BOOL />
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml"> TRUE: the Retain-variables are initialized (reset warm / reset cold)</xhtml>
                          </documentation>
                        </variable>
                        <variable name="bInCopyCode">
                          <type>
                            <BOOL />
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml"> TRUE  the instance will be copied to the copy-code afterward (online change)</xhtml>
                          </documentation>
                        </variable>
                        <variable name="ptrToRealSubject">
                          <type>
                            <pointer>
                              <baseType>
                                <derived name="Realsubject" />
                              </baseType>
                            </pointer>
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the RealSubject instance </xhtml>
                          </documentation>
                        </variable>
                        <variable name="iTempPassword">
                          <type>
                            <INT />
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">Local variable to store the password passed by the client with the password of the Proxy</xhtml>
                          </documentation>
                        </variable>
                        <variable name="iSetValue">
                          <type>
                            <INT />
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">Local variable to be used in WRITE request, it is the value to be set if the request is accepted</xhtml>
                          </documentation>
                        </variable>
                        <variable name="bReadWrite">
                          <type>
                            <BOOL />
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">Boolean value that specifies if the request is a WRITE or READ request</xhtml>
                          </documentation>
                        </variable>
                      </inputVars>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">//Stores the address of the subject on a field in th Proxy.
THIS^.refToRealSubject := ptrToRealSubject;
//Stores the password value of the client on a field in the Proxy
THIS^.iTempPassword := iTempPassword;

//For security reasons, the Password passed by the client and the Proxi's connection password are compared
IF	THIS^.iTempPassword = THIS^.iRealPassword 
	//If the password sent by the client is correct,
	THEN
	//We verify is the request is a SET or GET request
	IF bReadWrite
		//If the request is a SET request: boolean value TRUE
		THEN
		//The Proxy passes the request to the subject
		THIS^.Set_Method(iSetValue);
		//Once the request is completed, the Proxy responds to the client that the request has been accepted
		PLC_PRG.sTempSetLog := 'Request "SET" accepted';
		//If the request is a GET request: boolean value FALSE
		ELSE
		//The Proxy passes the request to the subject
		PLC_PRG.iGetValueLocal:= THIS^.Get_Method();
		//Once the request is completed, the Proxy responds to the client that the request has been accepted
		PLC_PRG.sTempGetLog := 'Request "GET" accepted';
	END_IF
	
	//If the password sent by the client is incorrect
	ELSE 
	//We verify is the request is a SET or GET request
	IF bReadWrite
		//If the request is a SET request: boolean value TRUE
		THEN
		//The Proxy handles the bad request and response to the client without the subject intervention
		PLC_PRG.sTempSetLog := 'Request denied. Wrong password.';
		//If the request is a GET request: boolean value FALSE
		ELSE
		//The Proxy handles the bad request and response to the client without the subject intervention
		PLC_PRG.sTempGetLog := 'Request denied. Wrong password.';
	END_IF

END_IF</xhtml>
                      </ST>
                    </body>
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD fb_init
VAR_INPUT
	/// TRUE: the Retain-variables are initialized (reset warm / reset cold)
	bInitRetains: BOOL;
	/// TRUE  the instance will be copied to the copy-code afterward (online change)
	bInCopyCode: BOOL;
	///Pointer to the RealSubject instance 
	ptrToRealSubject: POINTER TO Realsubject;
	///Local variable to store the password passed by the client with the password of the Proxy
	iTempPassword: INT;
	///Local variable to be used in WRITE request, it is the value to be set if the request is accepted
	iSetValue: INT;
	///Boolean value that specifies if the request is a WRITE or READ request
	bReadWrite: BOOL;
END_VAR
</xhtml>
                    </InterfaceAsPlainText>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="Get_Method" ObjectId="0faafaf3-5c99-4ce7-85f2-a9997699c3e3">
                    <interface>
                      <returnType>
                        <INT />
                      </returnType>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">//Calls the Get_Method of the subject through the proxy to read the iProp value of the subject 
// thanks to the pointer reference saved in the field refToRealSubject of the proxy object. 

Get_Method := THIS^.refToRealSubject^.Get_Method();

</xhtml>
                      </ST>
                    </body>
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD Get_Method : INT
</xhtml>
                    </InterfaceAsPlainText>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="Set_Method" ObjectId="bf9d501c-434c-4bc2-b338-4f2f21baee2b">
                    <interface>
                      <inputVars>
                        <variable name="num">
                          <type>
                            <INT />
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">Value to be set to the subject passed as an input argument</xhtml>
                          </documentation>
                        </variable>
                      </inputVars>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">//Calls the Set_Method of the subject through the proxy to write the iProp field of the subject 
// thanks to the pointer reference saved in the field refToRealSubject of the proxy object.

THIS^.refToRealSubject^.Set_Method(num);
</xhtml>
                      </ST>
                    </body>
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD Set_Method
VAR_INPUT
	///Value to be set to the subject passed as an input argument
	num: INT;
END_VAR
</xhtml>
                    </InterfaceAsPlainText>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                  <InterfaceAsPlainText>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">{attribute 'enable_dynamic_creation' := ''}
FUNCTION_BLOCK Proxy IMPLEMENTS Subject_Interface
VAR
	///Pointer to store the reference to the subject being protected
	refToRealSubject: POINTER TO Realsubject;
	///Last value of password entered by the client in the visualization element
	iTempPassword: INT;
END_VAR
VAR_STAT
	///Default password value for the request to be accepted
	iRealPassword: INT := 1234;
END_VAR
</xhtml>
                  </InterfaceAsPlainText>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>95b051c1-6231-4a1d-8cd6-3b176a14c557</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="Realsubject" pouType="functionBlock">
              <interface>
                <localVars>
                  <variable name="iProp">
                    <type>
                      <INT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to get and set values</xhtml>
                    </documentation>
                  </variable>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
                    <Inheritance>
                      <Implements>Subject_Interface</Implements>
                    </Inheritance>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="enable_dynamic_creation" Value="" />
                    </Attributes>
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="Get_Method" ObjectId="e5d61f1d-ce40-49a3-b00d-81878706227a">
                    <interface>
                      <returnType>
                        <INT />
                      </returnType>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">//Asks for the value of the object's iProp variable and passes it to the caller

Get_Method := THIS^.iProp; </xhtml>
                      </ST>
                    </body>
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD Get_Method : INT
</xhtml>
                    </InterfaceAsPlainText>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="Set_Method" ObjectId="d1c85d57-484f-4462-b13a-610d0968786b">
                    <interface>
                      <inputVars>
                        <variable name="num">
                          <type>
                            <INT />
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">Value to be set on the iProp varible of realSubjectInstance</xhtml>
                          </documentation>
                        </variable>
                      </inputVars>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">//Stores the value of the caller object on iProp variable. 

THIS^.iProp := num;</xhtml>
                      </ST>
                    </body>
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD Set_Method
VAR_INPUT
	///Value to be set on the iProp varible of realSubjectInstance
	num: INT;
END_VAR
</xhtml>
                    </InterfaceAsPlainText>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                  <InterfaceAsPlainText>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">{attribute 'enable_dynamic_creation' := ''}
FUNCTION_BLOCK Realsubject IMPLEMENTS Subject_Interface
VAR
	///Variable to get and set values
	iProp: INT;
END_VAR
</xhtml>
                  </InterfaceAsPlainText>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>b98cd672-9806-4c71-939e-f49997b14c1b</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="MAIN" pouType="program">
              <interface />
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">PLC_PRG();</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                  <InterfaceAsPlainText>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">PROGRAM MAIN
VAR
END_VAR
</xhtml>
                  </InterfaceAsPlainText>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>b7242ec8-0012-4f14-a020-d789e2e79601</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="PLC_PRG" pouType="program">
              <interface>
                <localVars>
                  <variable name="localSubjectInstance">
                    <type>
                      <derived name="Realsubject" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Instance of Realsubject but this one is Local to prove on a local and a global object</xhtml>
                    </documentation>
                  </variable>
                  <variable name="ptrLocalSubject">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="Realsubject" />
                        </baseType>
                      </pointer>
                    </type>
                    <initialValue>
                      <simpleValue value="ADR(localSubjectInstance)" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer to the local subject. Needed to instantiate its own Proxy. </xhtml>
                    </documentation>
                  </variable>
                  <variable name="ptrNullRealSubject">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="Realsubject" />
                        </baseType>
                      </pointer>
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Null pointer to the RealSubject class to verify that the other pointers are valid pointers and not null</xhtml>
                    </documentation>
                  </variable>
                  <variable name="ptrProxy">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="Proxy" />
                        </baseType>
                      </pointer>
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Pointer needed to create the Connection bridge "Proxy" between the client and the subject </xhtml>
                    </documentation>
                  </variable>
                  <variable name="iTempPasswordLocal">
                    <type>
                      <INT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to store the password set by the client to perform the connection</xhtml>
                    </documentation>
                  </variable>
                  <variable name="iSetValueLocal">
                    <type>
                      <INT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to store the INT passed by the client to be SET on the subject</xhtml>
                    </documentation>
                  </variable>
                  <variable name="bWriteRequest">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Boolean value to that gets toggled when the client send a SET request.
It is toggled again after the Proxy's response</xhtml>
                    </documentation>
                  </variable>
                  <variable name="bReadRequest">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Boolean value to that gets toggled when the client send a GET request.
It is toggled again after the Proxy's response</xhtml>
                    </documentation>
                  </variable>
                  <variable name="bReadWriteLocal">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to store locally if the request was a Write or Read request.
TRUE for a Write request and FALSE for a Read request</xhtml>
                    </documentation>
                  </variable>
                </localVars>
                <inputVars>
                  <variable name="sTempSetLog">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'Waiting for a request'" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to store the response log from the Proxy on a SET request</xhtml>
                    </documentation>
                  </variable>
                  <variable name="sTempGetLog">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'Waiting for a request'" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to store the response log from the Proxy on a GET request</xhtml>
                    </documentation>
                  </variable>
                  <variable name="iGetValueLocal">
                    <type>
                      <INT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Variable to store the LAST GET response value locally</xhtml>
                    </documentation>
                  </variable>
                </inputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">//The Visualization element can send a GET/SET request with all its parameters.
//Once the request is received by the PLC_PRG, the PLC_PRG creates the Proxy object to delegate the request and subject's connection to it.
//The default password value for the request is: 1234. It is specified in the static field .iRealPassword of the Proxy class

//El elemento Visualización puede enviar una solicitud GET/SET con todos sus parámetros.
// Una vez que PLC_PRG recibe la solicitud, PLC_PRG crea el objeto Proxy para delegar la solicitud y la conexión del sujeto a ella.
//El valor de contraseña predeterminado para la solicitud es: 1234. Se especifica en el campo estático .iRealPassword de la clase Proxy

//If a WRITE or SET request is received
IF	bWriteRequest
	THEN
	//We specify TRUE bReadWriteLocal because it is a SET request
	bReadWriteLocal := TRUE;
	//First we verify if the pointer to RealSubject to be used is a valid pointer
	IF ptrLocalSubject &lt;&gt; ptrNullRealSubject
		//If so, 
		THEN
		//The Proxy object is created with all its parameters passed by the PLC_PRG local variables.
		//As there is no "Method Overloading" options is CODESYS (Or at least the constructor cannot be overloaded) the constructor must receive and handle all the possible scenarios
		// .ptrToRealSubject is a Pointer to the RealSubject instance that we try to conncect to
		// .iTempPassword is the password passed by the client in the visualization element
		// .iSetValue is the value passed by the client to be SET on the RealSubject. If the request is a GET request, this value has no effect on the output of the connection.
		// .bReadWrite is the boolean value that specifies if the request is a SET or GET request
		
		//El objeto Proxy se crea con todos sus parámetros pasados ​​por las variables locales PLC_PRG.
		//Como no hay opciones de "Sobrecarga de métodos" en CODESYS (O al menos el constructor no se puede sobrecargar) el constructor debe recibir y manejar todos los escenarios posibles
		// .ptrToRealSubject es un puntero a la instancia de RealSubject a la que intentamos conectarnos
		// .iTempPassword es la contraseña pasada por el cliente en el elemento de visualización
		// .iSetValue es el valor pasado por el cliente para establecerlo en RealSubject. Si la solicitud es una solicitud GET, este valor no tiene ningún efecto en la salida de la conexión.
		// .bReadWrite es el valor booleano que especifica si la solicitud es una solicitud SET o GET		
		
		ptrProxy := __NEW( Proxy( ptrToRealSubject := ptrLocalSubject, iTempPassword :=  iTempPasswordLocal, iSetValue := iSetValueLocal, bReadWrite := bReadWriteLocal));
		//Once the Proxy has made the response, the memory is released by deleting the Proxy object
		__DELETE(ptrProxy);
	END_IF
	
	//We delete the local value of last password for security reasons. This way for every request the client must input a password
	iTempPasswordLocal := 0;
	//Once the WRITE request has been handled, we toggle the variable to avoid double requests
	bWriteRequest := FALSE;
END_IF

//If a READ or GET request is received
IF	bReadRequest
	THEN
	//We specify FALSE bReadWriteLocal because it is a GET request
	bReadWriteLocal := FALSE;
	//First we verify if the pointer to RealSubject to be used is a valid pointer
	IF ptrLocalSubject &lt;&gt; ptrNullRealSubject
		//If so,
		THEN
		//The Proxy object is created with all its parameters passed by the PLC_PRG local variables.
		//As there is no "Method Overloading" options is CODESYS (Or at least the constructor cannot be overloaded) the constructor must receive and handle all the possible scenarios
		// .ptrToRealSubject is a Pointer to the RealSubject instance that we try to conncect to
		// .iTempPassword is the password passed by the client in the visualization element
		// .iSetValue is the value passed by the client to be SET on the RealSubject. If the request is a GET request, this value has no effect on the output of the connection.
		// .bReadWrite is the boolean value that specifies if the request is a SET or GET request
		
		//El objeto Proxy se crea con todos sus parámetros pasados ​​por las variables locales PLC_PRG.
		//Como no hay opciones de "Sobrecarga de métodos" en CODESYS (O al menos el constructor no se puede sobrecargar) el constructor debe recibir y manejar todos los escenarios posibles
		// .ptrToRealSubject es un puntero a la instancia de RealSubject a la que intentamos conectarnos
		// .iTempPassword es la contraseña pasada por el cliente en el elemento de visualización
		// .iSetValue es el valor pasado por el cliente para establecerlo en RealSubject. Si la solicitud es una solicitud GET, este valor no tiene ningún efecto en la salida de la conexión.
		// .bReadWrite es el valor booleano que especifica si la solicitud es una solicitud SET o GET
		
		ptrProxy := __NEW(Proxy(ptrToRealSubject := ptrLocalSubject, iTempPassword :=  iTempPasswordLocal, iSetValue := 0, bReadWrite := bReadWriteLocal));
		//Once the Proxy has made the response, the memory is released by deleting the Proxy object
		__DELETE(ptrProxy);	
	END_IF
	
	//We delete the local value of last password for security reasons. This way for every request the client must input a password
	iTempPasswordLocal := 0;
	//Once the READ request has been handled, we toggle the variable to avoid double requests
	bReadRequest := FALSE;
END_IF</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                  <InterfaceAsPlainText>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">PROGRAM PLC_PRG
VAR
	///Instance of Realsubject but this one is Local to prove on a local and a global object
	localSubjectInstance: Realsubject;
	///Pointer to the local subject. Needed to instantiate its own Proxy. 
	ptrLocalSubject: POINTER TO Realsubject := ADR(localSubjectInstance);
	///Null pointer to the RealSubject class to verify that the other pointers are valid pointers and not null
	ptrNullRealSubject: POINTER TO Realsubject;
	///Pointer needed to create the Connection bridge "Proxy" between the client and the subject 
	ptrProxy: POINTER TO Proxy;
	///Variable to store the password set by the client to perform the connection
	iTempPasswordLocal: INT;
	///Variable to store the INT passed by the client to be SET on the subject
	iSetValueLocal: INT;
	///Boolean value to that gets toggled when the client send a SET request.
	///It is toggled again after the Proxy's response
	bWriteRequest: BOOL;
	///Boolean value to that gets toggled when the client send a GET request.
	///It is toggled again after the Proxy's response
	bReadRequest: BOOL;
	///Variable to store locally if the request was a Write or Read request.
	///TRUE for a Write request and FALSE for a Read request
	bReadWriteLocal: BOOL;
END_VAR
VAR_INPUT
	///Variable to store the response log from the Proxy on a SET request
	sTempSetLog: STRING := 'Waiting for a request';
	///Variable to store the response log from the Proxy on a GET request
	sTempGetLog: STRING := 'Waiting for a request';
	///Variable to store the LAST GET response value locally
	iGetValueLocal: INT;
END_VAR
</xhtml>
                  </InterfaceAsPlainText>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>7f1dd219-7e6d-42e9-9663-696063bc4a70</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/libraries" handleUnknown="implementation">
            <Libraries>
              <Library Name="#Tc2_Standard" Namespace="Tc2_Standard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Tc2_Standard, * (Beckhoff Automation GmbH)" />
              <Library Name="#Tc2_System" Namespace="Tc2_System" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Tc2_System, * (Beckhoff Automation GmbH)">
                <Parameters>
                  <Parameter Name="PARAM.TABLE_UPPER_BOUND" Value="15" />
                  <Parameter Name="PARAM.STRING_LENGTH_EXP" Value="255" />
                  <Parameter Name="PARAM.STRING_LENGTH_ADDRESS" Value="20" />
                  <Parameter Name="PARAM.STRING_LENGTH_COMMENT" Value="255" />
                  <Parameter Name="PARAM.STRING_LENGTH_OUTSTRING" Value="255" />
                  <Parameter Name="PARAM.TABLE_SHOW_VALID_ITEMS" Value="FALSE" />
                </Parameters>
              </Library>
              <Library Name="#Tc3_Module" Namespace="Tc3_Module" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Tc3_Module, * (Beckhoff Automation GmbH)" />
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>1dc37f63-cf6d-4710-82bc-4213ffaadf2f</ObjectId>
                </data>
              </addData>
            </Libraries>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e6820611-f35b-4673-a723-c6dc1af36b8c</ObjectId>
          </data>
        </addData>
      </resource>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/projectstructure" handleUnknown="discard">
      <ProjectStructure>
        <Object Name="Proxy" ObjectId="e6820611-f35b-4673-a723-c6dc1af36b8c">
          <Object Name="Library Manager" ObjectId="1dc37f63-cf6d-4710-82bc-4213ffaadf2f" />
          <Folder Name="Classes">
            <Object Name="Proxy" ObjectId="95b051c1-6231-4a1d-8cd6-3b176a14c557">
              <Object Name="fb_init" ObjectId="1327e92f-7b7e-4067-9d60-7c17a8b9cb58" />
              <Object Name="Get_Method" ObjectId="0faafaf3-5c99-4ce7-85f2-a9997699c3e3" />
              <Object Name="Set_Method" ObjectId="bf9d501c-434c-4bc2-b338-4f2f21baee2b" />
            </Object>
            <Object Name="Realsubject" ObjectId="b98cd672-9806-4c71-939e-f49997b14c1b">
              <Object Name="Get_Method" ObjectId="e5d61f1d-ce40-49a3-b00d-81878706227a" />
              <Object Name="Set_Method" ObjectId="d1c85d57-484f-4462-b13a-610d0968786b" />
            </Object>
          </Folder>
          <Folder Name="GVLs">
            <Object Name="GVL" ObjectId="70a67f79-b967-4931-9d3f-ea67b822d4cf" />
          </Folder>
          <Folder Name="Interfaces">
            <Object Name="Subject_Interface" ObjectId="9b176648-f559-43a2-83ce-c145c4e85927">
              <Object Name="Get_Method" ObjectId="43ef36d3-139e-4bf2-9c1f-5b8936d55187" />
              <Object Name="Set_Method" ObjectId="3c1b6c87-b1d5-4e04-802e-e3fea42eb71f" />
            </Object>
          </Folder>
          <Object Name="PlcTask" ObjectId="60af3a3e-155c-415c-b008-fb30cf2bbb89" />
          <Folder Name="POUs">
            <Object Name="MAIN" ObjectId="b7242ec8-0012-4f14-a020-d789e2e79601" />
            <Object Name="PLC_PRG" ObjectId="7f1dd219-7e6d-42e9-9663-696063bc4a70" />
          </Folder>
        </Object>
      </ProjectStructure>
    </data>
  </addData>
</project>